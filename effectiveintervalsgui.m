function[structout] = effectiveintervalsgui

    commandselectevents = [ 'tmpevents = getalleventtypes(EEG);' ...
                     'set(findobj(gcbf, ''tag'', ''eventtypes''), ''string'', ' ...
                     '       int2str(selectevents( tmpevents )));' ...
                     'clear tmpevents;' ];

    [res userdata err structout] = inputgui( 'geometry', { [1 0.2 0.7] [1 0.2 0.7] [1 0.2 0.7] [1 0.2 0.7] [1 0.2 0.7] [1 0.2 0.7] [1 0.2 0.7] }, ...
        'geomvert', [1 1 1 1 1 1 1], 'uilist', { ...
        { 'Style', 'text', 'string', 'Left time interval from event (ms):' } {}...
        { 'style', 'edit', 'string', '0' 'tag' 'timeinterval_left'  }, ...
        { 'Style', 'text', 'string', 'Right time interval from event (ms):' } {}...
        { 'style', 'edit', 'string', '2000' 'tag' 'timeinterval_right'  }, ...
        { 'Style', 'text', 'string', 'Left constraint from interval start (ms):' } {}...
        { 'style', 'edit', 'string', '0' 'tag' 'constraint_left'  }, ...
        { 'Style', 'text', 'string', 'Right constraing from interval start (ms):' } {}...
        { 'style', 'edit', 'string', '2000' 'tag' 'constraint_right'  }, ...
        { 'Style', 'text', 'string', 'Coefficient of superiority (> 1):' } {}...
        { 'style', 'edit', 'string', '1' 'tag' 'superiority_coef'  }, ...
        { 'Style', 'text', 'string', 'Minimal interval length (ms):' } {}...
        { 'style', 'edit', 'string', '1' 'tag' 'min_int_len'  }, ...
        { 'style', 'pushbutton' , 'string', 'Select events', 'callback', commandselectevents }, {}, ...
        { 'style', 'edit', 'string', '' 'tag' 'eventtypes'  } } );
    
end